// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//criar uma migration :yarn prisma migrate dev

model Usuarios {
  CODIGO       Int       @default(autoincrement())
  NOME         String
  USUARIO      String
  SENHA        String
  NIVEL_ACESSO String
  DT_CADASTRO  DateTime? @default(now())
  DT_ALTERACAO DateTime? @default(now())
  ID_USUARIO   String    @id @default(uuid())

  @@map("USUARIOS")
}

model Cliente {
  CODCLI       Int       @default(autoincrement())
  NOME         String
  CNPJ         String
  EMAIL        String?
  TELEFONE     String?
  ENDERECO     String?
  CIDADE       String?
  BAIRRO       String?
  NUMERO       String?
  UF           String?
  PAIS         String?
  COMPLEMENTO  String?
  CEP          String?
  DT_CADASTRO  DateTime? @default(now())
  DT_ALTERACAO DateTime? @default(now())
  ID_CLIENTE   String    @id @default(uuid())

  Servicos Servicos[]
  PagarB   PagarB[]
  Receber  Receber[]
  ReceberB ReceberB[]
  Pagar    Pagar[]

  @@map("CLIENTES")
}

model Maquina {
  CODIGO       Int       @default(autoincrement())
  DESCRICAO    String
  DT_CADASTRO  DateTime? @default(now())
  DT_ALTERACAO DateTime? @default(now())
  ID_MAQUINA   String    @id @default(uuid())

  Servicos Servicos[]
  @@map("MAQUINAS")
}

model Funcionario {
  CODFUN         Int       @default(autoincrement())
  NOME           String
  DT_CADASTRO    DateTime? @default(now())
  DT_ALTERACAO   DateTime? @default(now())
  ID_FUNCIONARIO String    @id @default(uuid())

  Servicos Servicos[]
  PagarB   PagarB[]
  Receber  Receber[]
  ReceberB ReceberB[]
  Pagar    Pagar[]
  @@map("FUNCIONARIOS")
}

model Produto {
  CODIGO       Int       @default(autoincrement())
  DESCRICAO    String
  PRECO        Float
  DT_CADASTRO  DateTime? @default(now())
  DT_ALTERACAO DateTime? @default(now())
  ID_PRODUTO   String    @id @default(uuid())

  Servicos Servicos[]
  @@map("PRODUTOS")
}

model Receber {
  NUMERO         Int       @default(autoincrement())
  ID_CLIENTE     String
  ID_FUNCIONARIO String
  VALOR_TOTAL    Float?
  PARCELA        String?
  VALOR_PARCELA  Float?
  DT_CADASTRO    DateTime? @default(now())
  DT_ALTERACAO   DateTime? @default(now())
  ID_RECEBER     String    @id @default(uuid())


  Clientes     Cliente     @relation(fields: [ID_CLIENTE], references: [ID_CLIENTE])
  Funcionarios Funcionario @relation(fields: [ID_FUNCIONARIO], references: [ID_FUNCIONARIO])

  @@map("RECEBER")
}

model ReceberB {
  NUMERO         Int      @default(autoincrement())
  ID_CLIENTE     String
  ID_FUNCIONARIO String
  VALOR_PAGO     Float?
  PARCELA        String?
  VALOR_PARCELA  Float?
  DT_PAGAMENTO   DateTime @default(now())
  ID_RECEBERB    String   @id @default(uuid())


  Clientes     Cliente     @relation(fields: [ID_CLIENTE], references: [ID_CLIENTE])
  Funcionarios Funcionario @relation(fields: [ID_FUNCIONARIO], references: [ID_FUNCIONARIO])

  @@map("RECEBERB")
}

model Pagar {
  NUMERO         Int      @default(autoincrement())
  ID_CLIENTE     String
  ID_FUNCIONARIO String
  VALOR_TOTAL    Float?
  PARCELA        String?
  DT_VENCIMENTO  DateTime @default(now())
  DT_CADASTRO    DateTime @default(now())
  DT_ALTERACAO   DateTime @default(now())
  ID_PAGAR       String   @id @default(uuid())


  Clientes     Cliente     @relation(fields: [ID_CLIENTE], references: [ID_CLIENTE])
  Funcionarios Funcionario @relation(fields: [ID_FUNCIONARIO], references: [ID_FUNCIONARIO])

  @@map("PAGAR")
}

model PagarB {
  NUMERO         Int      @default(autoincrement())
  ID_CLIENTE     String
  ID_FUNCIONARIO String
  VALOR_TOTAL    Float?
  VALOR_PAGO     Float?
  PARCELA        String?
  DT_PAGAMENTO   DateTime @default(now())
  ID_PAGARB      String   @id @default(uuid())

  Clientes     Cliente     @relation(fields: [ID_CLIENTE], references: [ID_CLIENTE])
  Funcionarios Funcionario @relation(fields: [ID_FUNCIONARIO], references: [ID_FUNCIONARIO])

  @@map("PAGARB")
}

model Servicos {
  CODIGO         Int      @default(autoincrement())
  ID_CLIENTE     String
  NOME_CLI       String
  ID_FUNCIONARIO String
  NOME_FUN       String
  VALOR          Float
  QTDE_HORAS     String
  ID_PRODUTO     String
  ID_MAQUINA     String
  DT_CADASTRO    DateTime @default(now())
  DT_ALTERACAO   DateTime @default(now())
  ID_SERVICO     String   @id @default(uuid())

  Maquinas     Maquina     @relation(fields: [ID_MAQUINA], references: [ID_MAQUINA])
  Produtos     Produto     @relation(fields: [ID_PRODUTO], references: [ID_PRODUTO])
  Clientes     Cliente     @relation(fields: [ID_CLIENTE], references: [ID_CLIENTE])
  Funcionarios Funcionario @relation(fields: [ID_FUNCIONARIO], references: [ID_FUNCIONARIO])

  @@map("SERVICOS")
}
